-- CREATE VIEW VIEW_USER_INFORMATION AS
-- SELECT U.USER_ID, U.FIRST_NAME, U.LAST_NAME, U.YEAR_OF_BIRTH, U.MONTH_OF_BIRTH, U.DAY_OF_BIRTH, U.GENDER, CC.CURRENT_CITY, CC.CURRENT_STATE, CC.CURRENT_COUNTRY, HC.HOMETOWN_CITY, HC.HOMETOWN_STATE, HC.HOMETOWN_COUNTRY
-- FROM USERS U
-- OUTER JOIN USER_CURRENT_CITIES C ON U.USER_ID = C.USER_ID
-- OUTER JOIN USER_HOMETOWN_CITIES H ON U.USER_ID = H.USER_ID;

CREATE VIEW VIEW_ARE_FRIENDS AS
SELECT * FROM FRIENDS;

CREATE VIEW VIEW_PHOTO_INFORMATION AS
SELECT A.ALBUM_ID, ALBUM_OWNER_ID AS OWNER_ID, ALBUM_NAME, ALBUM_CREATED_TIME,
        ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY, PHOTO_ID,
        PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK
FROM ALBUMS A
LEFT JOIN PHOTOS B
ON (A.ALBUM_ID = B.ALBUM_ID);

CREATE VIEW VIEW_EVENT_INFORMATION AS
SELECT EVENT_ID, EVENT_CREATOR_ID, EVENT_NAME, EVENT_TAGLINE,
        EVENT_DESCRIPTION, EVENT_HOST, EVENT_TYPE, EVENT_SUBTYPE,
        EVENT_ADDRESS, B.CITY_NAME AS EVENT_CITY,
        B.STATE_NAME AS EVENT_STATE, B.COUNTRY_NAME AS EVENT_COUNTRY,
        EVENT_START_TIME, EVENT_END_TIME
FROM USER_EVENTS A
LEFT JOIN CITIES B
ON (A.EVENT_CITY_ID = B.CITY_ID);

CREATE VIEW VIEW_TAG_INFORMATION AS
SELECT TAG_PHOTO_ID AS PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME,
        TAG_X AS TAG_X_COORDINATE, TAG_Y AS TAG_Y_COORDINATE
FROM TAGS;